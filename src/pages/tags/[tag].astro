---
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from 'astro'
import { ViewTransitions } from 'astro:transitions'

import ArticleListItem from '../../components/ArticleListItem.astro'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { getDirectusClient, readItems } from '../../utils/get-directus-client'

export const prerender = false
export const getStaticPaths = (async function () {
  const client = getDirectusClient()
  const allArticles = await client.request(readItems('article'))
  const uniqueTags = [
    ...new Set(allArticles.map(article => article.tags ?? []).flat()),
  ]

  return uniqueTags.map((tag: any) => {
    const filteredArticles = allArticles.filter(article =>
      article.tags?.includes(tag),
    )
    return {
      params: { tag },
      props: { articles: filteredArticles },
    }
  })
}) satisfies GetStaticPaths

type Params = InferGetStaticParamsType<typeof getStaticPaths>
type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { tag } = Astro.params as Params
const { articles } = Astro.props as Props;
---
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <ViewTransitions />
  </head>
</html>
<BaseLayout pageTitle={tag}>
  <div transition:animate="slide">
    <h1 class="pt-[1em] text-32px color-red text-center">
      Articles tagged with {tag}
    </h1>
    <br />
    <div class="flex justify-center">
      <ul class="w-50%">
        {
          articles.map(article => (
            <ArticleListItem
              data={article}
              url={`/articles/${article.slug}`}
            />
          ))
        }
      </ul>
    </div>
  </div>
</BaseLayout>
