---
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from 'astro'
import { getCollection } from 'astro:content'

import ArticleListItem from '../../components/ArticleListItem.astro'
import BaseLayout from '../../layouts/BaseLayout.astro'

export const getStaticPaths = (async function () {
  const allArticles = await getCollection('articles')
  const uniqueTags = [
    ...new Set(allArticles.map((article) => article.data.tags ?? []).flat()),
  ]

  return uniqueTags.map((tag: any) => {
    const filteredArticles = allArticles.filter((article) =>
      article.data.tags?.includes(tag),
    )
    return {
      params: { tag },
      props: { articles: filteredArticles },
    }
  })
}) satisfies GetStaticPaths
type Params = InferGetStaticParamsType<typeof getStaticPaths>
type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { tag } = Astro.params as Params
const { articles } = Astro.props as Props;
---

<BaseLayout pageTitle={tag}>
  <div>
    <h1 class="pt-[1em] text-32px text-center color-red">
      Articles tagged with {tag}
    </h1>
    <br />
    <div class="flex justify-center">
      <ul class="w-50%">
        {
          articles.map((article) => (
            <ArticleListItem
              frontmatter={article.data}
              url={`/articles/${article.slug}`}
            />
          ))
        }
      </ul>
    </div>
  </div>
</BaseLayout>
